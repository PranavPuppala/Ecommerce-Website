generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("PRISMA_DB_URL")
}

model Product {
    id            String         @id @default(uuid())
    name          String
    description   String
    features      String[]
    price         Float
    quantity      Int            @default(0)
    stock         Int
    category      String
    brand         String
    specs         Specification?
    originalPrice Float
    imageUrl      String[]
    reviews       Review[]
    orderId       String?
    order         Order?         @relation(fields: [orderId], references: [id])
    user          User?          @relation(fields: [userId], references: [id])
    userId        String?
}

model Review {
    id        String   @id @default(uuid())
    title     String
    comment   String
    rating    Int
    createdAt DateTime @default(now())
    Product   Product  @relation(fields: [productId], references: [id])
    productId String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
}

model Specification {
    id               String  @id @default(uuid())
    processor        String?
    graphics         String?
    memory           String?
    storage          String?
    displayType      String?
    screenSize       String?
    screenResolution String?
    color            String?
    productId        String  @unique
    product          Product @relation(fields: [productId], references: [id])
}

model User {
    id            String    @id @default(uuid())
    email         String    @unique
    password      String
    role          UserRole  @default(USER)
    firstName     String    @default("")
    lastName      String    @default("")
    savedProducts Product[]
    reviews       Review[]
    orders        Order[]
}

model Order {
    id        String    @id @default(uuid())
    products  Product[]
    total     Float
    createdAt DateTime  @default(now())
    user      User      @relation(fields: [userId], references: [id])
    userId    String
}

enum UserRole {
    ADMIN
    USER
}
